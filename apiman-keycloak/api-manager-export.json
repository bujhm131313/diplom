{
  "Metadata" : {
    "exportedOn" : "2017-11-19T08:19:19Z",
    "apimanVersion" : "1.3.1.Final"
  },
  "Users" : [ {
    "username" : "admin",
    "fullName" : "Admin User",
    "email" : "admin@example.org",
    "joinedOn" : "2017-11-18T23:57:35Z",
    "admin" : false
  } ],
  "Gateways" : [ {
    "id" : "TheGateway",
    "name" : "The Gateway",
    "description" : "This is the gateway.",
    "createdBy" : "admin",
    "createdOn" : "2016-05-16T12:34:15Z",
    "modifiedBy" : "admin",
    "modifiedOn" : "2016-05-16T12:34:15Z",
    "type" : "REST",
    "configuration" : "{\"endpoint\":\"${apiman.gateway-endpoint:https://localhost:8443/apiman-gateway-api}\",\"username\":\"${apiman.gateway-endpoint.username:apimanager}\",\"password\":\"${apiman.gateway-endpoint.password:apiman123!}\"}"
  } ],
  "Plugins" : [ {
    "id" : 1006,
    "groupId" : "io.apiman.plugins",
    "artifactId" : "apiman-plugins-keycloak-oauth-policy",
    "version" : "1.3.1.Final",
    "name" : "Keycloak OAuth Policy Plugin",
    "description" : "This plugin offers an OAuth2 policy which leverages the Keycloak authentication platform as the identity and access provider.",
    "createdBy" : "admin",
    "createdOn" : "2017-11-19T00:03:09Z",
    "deleted" : false
  } ],
  "Roles" : [ {
    "id" : "APIDeveloper",
    "name" : "API Developer",
    "description" : "Users responsible for creating and managing APIs should be granted this role within an Organization.",
    "createdBy" : "admin",
    "createdOn" : "2016-05-16T12:34:14Z",
    "autoGrant" : false,
    "permissions" : [ "planAdmin", "planEdit", "apiAdmin", "apiEdit", "apiView", "planView" ]
  }, {
    "id" : "ClientAppDeveloper",
    "name" : "Client App Developer",
    "description" : "Users responsible for creating and managing client apps should be granted this role within an Organization.",
    "createdBy" : "admin",
    "createdOn" : "2016-05-16T12:34:14Z",
    "autoGrant" : false,
    "permissions" : [ "clientView", "clientEdit", "clientAdmin" ]
  }, {
    "id" : "OrganizationOwner",
    "name" : "Organization Owner",
    "description" : "Automatically granted to the user who creates an Organization.  Grants all privileges.",
    "createdBy" : "admin",
    "createdOn" : "2016-05-16T12:34:14Z",
    "autoGrant" : true,
    "permissions" : [ "planAdmin", "planEdit", "orgEdit", "clientView", "clientEdit", "apiAdmin", "apiEdit", "orgView", "orgAdmin", "clientAdmin", "apiView", "planView" ]
  } ],
  "PolicyDefinitions" : [ {
    "id" : "AuthorizationPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.AuthorizationPolicy",
    "name" : "Authorization Policy",
    "description" : "Enables fine grained authorization to API resources based on authenticated user roles.",
    "icon" : "users",
    "templates" : [ {
      "template" : "Appropriate authorization roles are required.  There are ${rules.size()} authorization rules defined."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "BASICAuthenticationPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.BasicAuthenticationPolicy",
    "name" : "BASIC Authentication Policy",
    "description" : "Enables HTTP BASIC Authentication on an API.  Some configuration required.",
    "icon" : "lock",
    "templates" : [ {
      "template" : "Access to the API is protected by BASIC Authentication through the '${realm}' authentication realm.  @if{forwardIdentityHttpHeader != null}Successfully authenticated requests will forward the authenticated identity to the back end API via the '${forwardIdentityHttpHeader}' custom HTTP header.@end{}"
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "CachingPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.CachingPolicy",
    "name" : "Caching Policy",
    "description" : "Allows caching of API responses in the Gateway to reduce overall traffic to the back-end API.",
    "icon" : "hdd-o",
    "templates" : [ {
      "template" : "API responses will be cached for ${ttl} seconds."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "IPBlacklistPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.IPBlacklistPolicy",
    "name" : "IP Blacklist Policy",
    "description" : "Requests that originate from a specified set of valid IP addresses will be denied access.",
    "icon" : "thumbs-down",
    "templates" : [ {
      "template" : "Requests that originate from the set of ${ipList.size()} configured IP address(es) will be denied access to the managed API."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "IPWhitelistPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.IPWhitelistPolicy",
    "name" : "IP Whitelist Policy",
    "description" : "Only requests that originate from a specified set of valid IP addresses will be allowed through.",
    "icon" : "filter",
    "templates" : [ {
      "template" : "Only requests that originate from the set of ${ipList.size()} configured IP address(es) will be allowed to invoke the managed API."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "IgnoredResourcesPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.IgnoredResourcesPolicy",
    "name" : "Ignored Resources Policy",
    "description" : "Requests satisfying the provided regular expression will be ignored.",
    "icon" : "eye-slash",
    "templates" : [ {
      "template" : "Requests matching any of the ${rules.size()} regular expressions provided will receive a 404 error code."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "QuotaPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.QuotaPolicy",
    "name" : "Quota Policy",
    "description" : "Provides a way to limit the total number of requests that can be sent to an API.",
    "icon" : "exchange",
    "templates" : [ {
      "template" : "Consumers cannot exceed their quota of ${limit} requests per ${granularity} per ${period}."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "RateLimitingPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.RateLimitingPolicy",
    "name" : "Rate Limiting Policy",
    "description" : "Enforces rate configurable request rate limits on an API.  This ensures that consumers can't overload an API with too many requests.",
    "icon" : "sliders",
    "templates" : [ {
      "template" : "Consumers are limited to ${limit} requests per ${granularity} per ${period}."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "TimeRestrictedAccessPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.TimeRestrictedAccessPolicy",
    "name" : "Time Restricted Access Policy",
    "description" : "Requests matching the specified regular expression and made within the specified time period will be ignored.",
    "icon" : "clock-o",
    "templates" : [ {
      "template" : "Requests matching the regular expression and made outside the specified time period will receive a 423 error code."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "TransferQuotaPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.TransferQuotaPolicy",
    "name" : "Transfer Quota Policy",
    "description" : "Provides a way to limit the total number of bytes that can be transferred from (or to) an API.",
    "icon" : "download",
    "templates" : [ {
      "template" : "Consumers are limited to transferring ${limit} bytes per ${granularity} per ${period}."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "URLRewritingPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.URLRewritingPolicy",
    "name" : "URL Rewriting Policy",
    "description" : "Responses from the back-end API will be modified by fixing up any incorrect URLs found with modified ones.  This is useful because apiman works through an API Gateway.",
    "icon" : "pencil-square",
    "templates" : [ {
      "template" : "Requests and/or responses will be modified by finding all text matching regular expression '${fromRegex}' with '${toReplacement}'."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "keycloak-oauth-policy",
    "policyImpl" : "plugin:io.apiman.plugins:apiman-plugins-keycloak-oauth-policy:1.3.1.Final:war/io.apiman.plugins.keycloak_oauth_policy.KeycloakOauthPolicy",
    "name" : "Keycloak OAuth Policy",
    "description" : "A Keycloak specific OAuth policy to regulate access to APIs. Configuration required.",
    "icon" : "lock",
    "templates" : [ {
      "template" : "Keycloak OAuth2 is @if{requireOauth} required @else{} enabled @end{} and @if{requireTransportSecurity} requires @else{} does not require @end{} transport security."
    } ],
    "pluginId" : 1006,
    "formType" : "JsonSchema",
    "form" : "schemas/keycloak-oauth-policyDef.schema",
    "deleted" : false
  } ],
  "Orgs" : [ {
    "OrganizationBean" : {
      "id" : "FaceAPI",
      "name" : "FaceAPI",
      "createdBy" : "admin",
      "createdOn" : "2017-11-18T23:57:48Z",
      "modifiedBy" : "admin",
      "modifiedOn" : "2017-11-18T23:57:48Z"
    },
    "Memberships" : [ {
      "id" : 1000,
      "userId" : "admin",
      "roleId" : "OrganizationOwner",
      "organizationId" : "FaceAPI",
      "createdOn" : "2017-11-18T23:57:48Z"
    } ],
    "Plans" : [ ],
    "Apis" : [ {
      "ApiBean" : {
        "id" : "faceapi",
        "name" : "faceapi",
        "createdBy" : "admin",
        "createdOn" : "2017-11-19T00:01:55Z",
        "numPublished" : 1
      },
      "Versions" : [ {
        "ApiVersionBean" : {
          "id" : 1002,
          "status" : "Published",
          "endpoint" : "http://localhost:5000",
          "endpointType" : "rest",
          "endpointContentType" : "json",
          "endpointProperties" : { },
          "gateways" : [ {
            "gatewayId" : "TheGateway"
          } ],
          "publicAPI" : true,
          "plans" : [ ],
          "version" : "v1",
          "createdBy" : "admin",
          "createdOn" : "2017-11-19T00:01:55Z",
          "modifiedBy" : "admin",
          "modifiedOn" : "2017-11-19T08:13:24Z",
          "publishedOn" : "2017-11-19T08:13:32Z",
          "parsePayload" : false
        },
        "Policies" : [ {
          "id" : 1007,
          "type" : "Api",
          "organizationId" : "FaceAPI",
          "entityId" : "faceapi",
          "entityVersion" : "v1",
          "name" : "Keycloak OAuth Policy",
          "configuration" : "{\"requireOauth\":true,\"requireTransportSecurity\":true,\"blacklistUnsafeTokens\":false,\"stripTokens\":false,\"realm\":\"http://127.0.0.1:8080/auth/realms/faceapi\",\"realmCertificateString\":\"MIICnTCCAYUCBgFNvgU/kjANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdzdG90dGllMB4XDTE1MDYwNDEwMDAyNFoXDTI1MDYwNDEwMDIwNFowEjEQMA4GA1UEAwwHc3RvdHRpZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKwVSFacR00MzGUZuPEuqImUDxIPa/a4d8hW/TV9ERVMNOL0GLEufAd4XXE8gr3htJ2y5wB7DlyUxCJo+yl1STKgEVcNi4k92cxIOIfyl978OtHiB9zs1eI93uhH/Ru40kIVcE/WPnq8gtJSzuS58DPUFp/MQXSk3GJIEk1eF3SKJIa0X+EBrJAuR6VFdA0ks0Hr9MQqitMi2cwoyiPeNxuGk3+NaWFNdwUI/ccPLQ4mRKCgjyZ/VWv5ilOflNM8kouhvtB0Wu8awGScRpVE5c0OZ6yceG1izF1g59jLvoiIm8I1Q7S/POmCf7KaWscpIBJXvSzJaTRoy+9nCSwDYe0CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAi5o+4zVGtzZB88iMRvu85Amu9xMcyMaABAJKA4RNXMiYiStwVXNfRaqcECajAzx5BFo8XNxOEHe02U+/aac/j0H8IJT9Y9g8CCJnq0xIWrTAUSlBGdGUOJO0SZ7afy4iim68iJpLlQO3bE8lLzBkq+jlef6KQTH7Q1Ve8l692G4+x479v3gtVhOfnHxWUi7XRNOiP/Sjem2w6DFBgU3ua0tofJhZ9spK1YvIf4IjtJ0duhdl0jyPaakZM+tUp08ne6lN/5HCYOegQOXzs/1gD0d1l1r8h8E3rhsEtKY+51Ohlr8szYzSHJPP/1LNEXDjA4Nptul20eRIKwOGfTwyVw==\",\"forwardRoles\":{\"active\":true},\"delegateKerberosTicket\":false,\"forwardAuthInfo\":[{\"headers\":\"X-AZP\",\"field\":\"azp\"}]}",
          "createdBy" : "admin",
          "createdOn" : "2017-11-19T08:13:24Z",
          "modifiedBy" : "admin",
          "modifiedOn" : "2017-11-19T08:13:24Z",
          "definition" : {
            "id" : "keycloak-oauth-policy",
            "templates" : [ ],
            "deleted" : false
          },
          "orderIndex" : 1
        } ]
      } ]
    } ],
    "Clients" : [ ],
    "Audits" : [ {
      "id" : 999,
      "who" : "admin",
      "organizationId" : "FaceAPI",
      "entityType" : "Organization",
      "createdOn" : "2017-11-18T23:57:48Z",
      "what" : "Create"
    }, {
      "id" : 1001,
      "who" : "admin",
      "organizationId" : "FaceAPI",
      "entityType" : "Api",
      "entityId" : "faceapi",
      "createdOn" : "2017-11-19T00:01:55Z",
      "what" : "Create"
    }, {
      "id" : 1003,
      "who" : "admin",
      "organizationId" : "FaceAPI",
      "entityType" : "Api",
      "entityId" : "faceapi",
      "entityVersion" : "v1",
      "createdOn" : "2017-11-19T00:01:55Z",
      "what" : "Create"
    }, {
      "id" : 1004,
      "who" : "admin",
      "organizationId" : "FaceAPI",
      "entityType" : "Api",
      "entityId" : "faceapi",
      "entityVersion" : "v1",
      "createdOn" : "2017-11-19T00:02:24Z",
      "what" : "Update",
      "data" : "{\"changes\":[{\"name\":\"endpoint\",\"before\":null,\"after\":\"http://localhost:5000\"},{\"name\":\"endpointType\",\"before\":null,\"after\":\"rest\"},{\"name\":\"endpointContentType\",\"before\":null,\"after\":\"json\"}]}"
    }, {
      "id" : 1005,
      "who" : "admin",
      "organizationId" : "FaceAPI",
      "entityType" : "Api",
      "entityId" : "faceapi",
      "entityVersion" : "v1",
      "createdOn" : "2017-11-19T00:02:35Z",
      "what" : "Update",
      "data" : "{\"changes\":[{\"name\":\"publicAPI\",\"before\":\"false\",\"after\":\"true\"}]}"
    }, {
      "id" : 1008,
      "who" : "admin",
      "organizationId" : "FaceAPI",
      "entityType" : "Api",
      "entityId" : "faceapi",
      "entityVersion" : "v1",
      "createdOn" : "2017-11-19T08:13:24Z",
      "what" : "AddPolicy",
      "data" : "{\"policyDefId\":\"keycloak-oauth-policy\"}"
    }, {
      "id" : 1009,
      "who" : "admin",
      "organizationId" : "FaceAPI",
      "entityType" : "Api",
      "entityId" : "faceapi",
      "entityVersion" : "v1",
      "createdOn" : "2017-11-19T08:13:32Z",
      "what" : "Publish"
    } ]
  } ]
}